#!/usr/bin/env python3

import os
import sys
import random

def main():
    if len(sys.argv) != 2:
        print("Usage: ./gru N", file=sys.stderr)
        sys.exit(1)

    try:
        n = int(sys.argv[1])
        if n <= 0:
            raise ValueError()
    except ValueError:
        print("Error: N must be a positive integer.", file=sys.stderr)
        sys.exit(1)

    pid = os.getpid()
    children = []

    def create_child():
        nonlocal pid, children
        child_pid = os.fork()
        if child_pid == 0:
            s = str(random.randint(5, 10))
            try:
                os.execve('./minion', ['./minion', s], os.environ)
            except Exception as e:
                print(f"Failed to execute minion: {e}", file=sys.stderr)
                os._exit(1)
        else:  # Parent process
            print(f"Gru[{pid}]: process created. PID {child_pid}.")
            children.append(child_pid)

    for _ in range(n):
        create_child()

    while children:
        child_pid, status = os.wait()
        exit_status = os.WEXITSTATUS(status)
        print(f"Gru[{pid}]: process terminated. PID {child_pid}. Exit status {exit_status}.")
        children.remove(child_pid)

        if exit_status != 0:
            create_child()

    sys.exit(0)

if __name__ == "__main__":
    main()
